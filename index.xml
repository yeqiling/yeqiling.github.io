<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>叶子的博客</title>
    <link>https://yeqiling.github.io/</link>
    <description>Recent content on 叶子的博客</description>
    <image>
      <title>叶子的博客</title>
      <url>https://yeqiling.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://yeqiling.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.129.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 27 Jul 2024 19:17:58 +0800</lastBuildDate>
    <atom:link href="https://yeqiling.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>frida在安卓端的学习与应用</title>
      <link>https://yeqiling.github.io/posts/frida%E5%9C%A8%E5%AE%89%E5%8D%93%E7%AB%AF%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sat, 27 Jul 2024 19:17:58 +0800</pubDate>
      <guid>https://yeqiling.github.io/posts/frida%E5%9C%A8%E5%AE%89%E5%8D%93%E7%AB%AF%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/</guid>
      <description>Frida介绍 Frida是一款功能强大的动态插桩工具，广泛用于逆向工程、调试和安全分析。特别是在安卓平台上，Frida能够让我们在不修改目标应用代码的情况下，动态地拦截和修改其行为。这使得Frida成为安全研究员和开发者们的首选工具之一。
Frida的基本概念 Frida通过在目标进程中注入JavaScript引擎，使我们能够在运行时对应用进行控制和修改。它提供了简单易用的API，让我们可以轻松地编写脚本来hook函数、修改返回值，甚至拦截和篡改数据。
Frida安卓环境配置 参考下面的Frida相关资料在电脑上安装：
模拟器（已开启root）：网易mumu模拟器 python3环境：Python pip配置国内源 windows平台Frida环境：windows搭建frida运行环境 需要注意： 1. 使用pip 安装的frida-tools不需要egg文件也可正常使用 2. mumu模拟器的内核是x86,所以使用x86的server，用真机的话，需开启root，并下载相应的架构
搭建成功后，我们首先连接模拟器
adb connect 127.0.0.1:7555 推送并开启frida-server
adb push frida-server /data/local/tmp/ adb shell &amp;#34;chmod 755 /data/local/tmp/frida-server&amp;#34; adb shell &amp;#34;/data/local/tmp/frida-server &amp;amp;&amp;#34; 中转安卓进程
adb forward tcp:27042 tcp:27042 adb forward tcp:27043 tcp:27043 检查frida-ps
frida-ps -R 编写trace_app.py，hook并解析相关进程，核心代码如下
device = frida.get_usb_device(timeout=5) if (args.package): print(&amp;#39;[*] Spawning &amp;#39; + args.package) pid = device.spawn(args.package) print(pid) session = device.attach(pid) parse_hook(args.load) device.resume(pid) else: attach_name = args.attach session = device.</description>
    </item>
    <item>
      <title>为什么你应该从现在开始写博客</title>
      <link>https://yeqiling.github.io/posts/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E5%BA%94%E8%AF%A5%E4%BB%8E%E7%8E%B0%E5%9C%A8%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 26 Jul 2024 00:17:47 +0800</pubDate>
      <guid>https://yeqiling.github.io/posts/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E5%BA%94%E8%AF%A5%E4%BB%8E%E7%8E%B0%E5%9C%A8%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/</guid>
      <description>转载自心灵骇客
写博客有很多好处，而坏处几乎没有。就像有些例外不能反驳普遍规律一样，写博客也是一样的道理。具体来说，写博客可以带来以下几大好处：
1. 结交志同道合的朋友 写博客让你有机会认识很多和你有共同兴趣的人。通过博客记录想法和分享观点，你能吸引到同样有思想深度的人。比如我在CSDN上写博客，后来创建了一个Google Groups，大家因为共同的兴趣聚在一起，讨论越来越深入，最终形成了一个活跃的社区。
2. 书写促进思考 书写是更好的思考。写博客让你有机会整理自己的思路，把思考过程变得清晰。你会发现，很多时候你以为明白的事情，写下来之后会变得更明了。
3. 教是最好的学 要把一个问题讲清楚，说明你已经完全理解它。写博客让你有机会把复杂的问题简单化，通过解释来加深自己的理解，就像对着小熊讲解问题那样，你会发现很多答案自己也能找出来。
4. 激发持续学习和思考 写博客需要不断学习和思考，这会促使你保持学习的习惯。如果你没有持续学习的动力，博客就会变成碎碎念，但如果你坚持写有价值的内容，你会发现读者越来越多，这反过来又会激励你持续学习。
5. 讨论带来反思 通过博客你能和别人交流观点，这会促使你反思自己的思维方式。讨论能让你看到不同的视角，帮助你深入理解问题。
6. 培养持之以恒的习惯 长期写博客需要坚持，这种坚持会培养你持之以恒的习惯。写博客会成为一种日常，不仅能帮助你记录思考，还能提升你的写作和思维能力。
7. 个人品牌和简历 一个长期有价值的博客是一份很好的个人简历。它能展示你的思考深度和专业水平，让更多人了解你。虽然未必能像罗永浩那样影响力巨大，但至少能结识更多有价值的人，开阔眼界。
如何做到长期写一个价值博客 关键是要让自己成为一个持续学习和思考的人，并把这些思考写下来。不要为了写博客而思考，而是因为思考而写博客。当你习惯了这种思维模式，博客就会成为一种自然的表达。
可能出现的问题及应对方法 1. 担心别人认为没有价值 你的思考和总结总会对一些人有价值。不要因为怕别人认为没价值就不写。写下来不仅是对自己的总结，也是对他人的分享。
2. 担心想法幼稚或有漏洞 人非圣贤，正因为有漏洞才值得拿出来讨论。被指出问题是改进的机会，不要因为怕被笑话就不写。
3. 得不到激励 如果你写的是有价值的内容，书写本身就是一种激励。就算没人看，自己总结也是一种成就感。随着时间的推移，你的博客一定会吸引到有共同兴趣的读者。
4. 写不出来 思考本来就不是急于求成的事。遇到困难的问题，花时间去思考，总能写出有价值的内容。让问题在大脑中停留更长时间，你会发现更多新的东西。
总之，写博客是一个不断思考和总结的过程。只要坚持下去，你会发现它带来的好处远远超过预期。</description>
    </item>
  </channel>
</rss>
